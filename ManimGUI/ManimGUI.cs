using System.Xml.Linq;
using System;
using System.IO;
using System.Diagnostics;

namespace ManimGUI
{
    public static class ManimGUI
    {
        public static readonly string VERSION = "0.0.2";
        public static string GetApplicationDataPath()
        {
            string appDataDir = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
            string appDir = Path.Combine(appDataDir, "ManimGUI");
            // On Windows, appDir might be something like `C:\Users\John\AppData\Roaming\ManimGUI`
            // On macOS, appDir might be something like `/Users/John/Library/Application Support/ManimGUI`
            return appDir;
        }
        public static async Task Init(Project project)
        {
            string projectPath = project.Path;

            XDocument doc = Filesystem.CreateProjectFile(project);
            Directory.CreateDirectory(projectPath);
            doc.Save(projectPath + "\\Project.mgui");

            // Setup ManimGUI app folder and venv
            bool appFolder = Directory.Exists(GetApplicationDataPath());
            if(!appFolder) Directory.CreateDirectory(GetApplicationDataPath());

            bool venvFolder = Directory.Exists(Path.Combine(GetApplicationDataPath(), "venv"));
            if(!venvFolder) // Create the python virtual environment
                using (Process venvProcess = new Process())
                {
                    venvProcess.StartInfo.WorkingDirectory = GetApplicationDataPath();
                    venvProcess.StartInfo.FileName = "python.exe";
                    venvProcess.StartInfo.Arguments = "-m venv venv";
                    venvProcess.StartInfo.CreateNoWindow = true;
                    venvProcess.StartInfo.UseShellExecute = false;
                    venvProcess.Start();
                    venvProcess.WaitForExit();
                }

            string[] lines = {
                "# AUTO-GENERATED",
                "# This file has been auto-generated by 'MANIM GUI' by ROCKY STUDIOS.",
                "# Modifying this file will do nothing and it will get overwritten",
                "# PROJECT SETTINGS:",
                "# Project name: " + project.Name,
                "# Last opened editor version: " + project.LastOpenedVersion
            };

            await WritePythonFile(lines, projectPath + "\\Project.py");            
        }

        public static async Task WritePythonFile(string[] lines, string path)
        {
            // Set a variable to the Documents path.
            string docPath =
              Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);

            // Write the string array to a new file named "WriteLines.txt".
            using (StreamWriter outputFile = new StreamWriter(path))
            {
                foreach (string line in lines)
                    await outputFile.WriteLineAsync(line);
            }
        }
    }
}